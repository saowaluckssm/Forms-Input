{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/react-form/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hook/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastname,\n    isValid: enteredLastnameIsValid,\n    hasError: lastnameInputHasError,\n    valueChangeHandler: lastnameChangedHandler,\n    inputBlurHandler: lastnameBlurHandler,\n    reset: resetLastnameInput\n  } = useInput(value => value.trim() !== \"\");\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid && !enteredLastnameIsValid) {\n      return console.log(\"invalid\");\n    }\n\n    console.log(enteredName);\n    console.log(enteredLastname);\n    resetNameInput();\n    resetLastnameInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const lastnameInputClasses = lastnameInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameChangedHandler,\n          onBlur: nameBlurHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \" Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: lastnameInputClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            onChange: lastnameChangedHandler,\n            onBlur: lastnameBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \" Lastname must not be empty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"+PPWdsSiBVTLlT/d1Xa5mU6Rk6Y=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/react-form/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredLastname","enteredLastnameIsValid","lastnameInputHasError","lastnameChangedHandler","lastnameBlurHandler","resetLastnameInput","formSubmitHandler","e","preventDefault","console","log","nameInputClasses","lastnameInputClasses"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,OAAO,EAAEC,kBAFL;AAGJC,IAAAA,QAAQ,EAAEC,iBAHN;AAIJC,IAAAA,kBAAkB,EAAEC,kBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,eALd;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFd,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CAPZ;AASA,QAAM;AACJZ,IAAAA,KAAK,EAAEa,eADH;AAEJX,IAAAA,OAAO,EAAEY,sBAFL;AAGJV,IAAAA,QAAQ,EAAEW,qBAHN;AAIJT,IAAAA,kBAAkB,EAAEU,sBAJhB;AAKJR,IAAAA,gBAAgB,EAAES,mBALd;AAMJP,IAAAA,KAAK,EAAEQ;AANH,MAOFrB,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CAPZ;;AASA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAAClB,kBAAD,IAAuB,CAACW,sBAA5B,EAAoD;AAClD,aAAOQ,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAP;AACD;;AAEDD,IAAAA,OAAO,CAACC,GAAR,CAAYtB,WAAZ;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACAF,IAAAA,cAAc;AACdO,IAAAA,kBAAkB;AACnB,GAXD;;AAaA,QAAMM,gBAAgB,GAAGnB,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;AAGA,QAAMoB,oBAAoB,GAAGV,qBAAqB,GAC9C,sBAD8C,GAE9C,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEI,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEK,gBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,QAAQ,EAAEjB,kBAHZ;AAIE,UAAA,MAAM,EAAEE,eAJV;AAKE,UAAA,KAAK,EAAER;AALT;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGI,iBAAiB,iBAChB;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAEoB,oBAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,MAFL;AAGE,YAAA,QAAQ,EAAET,sBAHZ;AAIE,YAAA,MAAM,EAAEC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFF,EAQGZ,iBAAiB,iBAChB;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,eAkCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA/ED;;GAAMP,S;UAQAD,Q,EASAA,Q;;;KAjBAC,S;AAiFN,eAAeA,SAAf","sourcesContent":["import useInput from \"../hook/use-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastname,\n    isValid: enteredLastnameIsValid,\n    hasError: lastnameInputHasError,\n    valueChangeHandler: lastnameChangedHandler,\n    inputBlurHandler: lastnameBlurHandler,\n    reset: resetLastnameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid && !enteredLastnameIsValid) {\n      return console.log(\"invalid\");\n    }\n\n    console.log(enteredName);\n    console.log(enteredLastname);\n    resetNameInput();\n    resetLastnameInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastnameInputClasses = lastnameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={nameChangedHandler}\n            onBlur={nameBlurHandler}\n            value={enteredName}\n          />\n          {nameInputHasError && (\n            <p className=\"error-text\"> Name must not be empty.</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <div className={lastnameInputClasses}>\n            <label htmlFor=\"name\">Last Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              onChange={lastnameChangedHandler}\n              onBlur={lastnameBlurHandler}\n            />\n            {nameInputHasError && (\n              <p className=\"error-text\"> Lastname must not be empty.</p>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}